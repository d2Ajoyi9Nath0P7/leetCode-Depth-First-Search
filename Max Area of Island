int dfs(int row,int col,vector<vector<int>>& grid,int& count)
{
    if(row < 0 || row >= grid.size() || col < 0 || col >= grid[0].size())
    {
        return 0;
    }
    if(grid[row][col] == 0)
    {
        return 0;
    }

    grid[row][col] = 0;

    if(dfs(row-1,col,grid,count) == 1)
    {
        count++;
    }
    if(dfs(row,col+1,grid,count) == 1)//2 3
    {
        count++;
    }
    if(dfs(row+1,col,grid,count) == 1)//1
    {
        count++;
    }
    if(dfs(row,col-1,grid,count) == 1)
    {
        count++;
    }

    return 1;
}

int maxAreaOfIsland(vector<vector<int>>& grid)
{
    int Max = 0;
    int cnt = 0;

    for(int i = 0 ; i < grid.size(); i++)
    {
        for(int j = 0 ; j < grid[0].size(); j++)
        {
            if(grid[i][j] == 1)
            {
                int count = 1;
                dfs(i,j,grid,count);
                Max = max(Max,count);
            }
        }
    }

    return Max;
}
