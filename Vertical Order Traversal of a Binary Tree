vector<vector<int>> verticalTraversal(TreeNode* root)
{
    map<int,map<int,multiset<int>>>mp;//
    vector<vector<int>>vec;

    queue<pair<TreeNode*,pair<int,int>>>q;

    q.push({root,{0,0}});
    while(!q.empty())
    {
        auto temp = q.front();
        q.pop();
        TreeNode* node = temp.first;
        int col = temp.second.first;
        int row = temp.second.second;

        mp[col][row].insert(node->val);

        if(node -> left != NULL)
        {
            q.push({node->left,{col-1,row+1}});
        }
        if(node -> right != NULL)
        {
            q.push({node->right,{col+1,row+1}});
        }
    }

    for(auto i : mp)
    {
        vector<int>inner;
        for(auto j : i.second)
        {
            inner.insert(inner.end(),j.second.begin(),j.second.end());
        }
        vec.push_back(inner);
    }
    return vec;
}
